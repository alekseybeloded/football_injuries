[tool.poetry]
name = "sportinj"
version = "0.1.0"
description = ""
authors = ["alekseybeloded <belod-aleksej@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "4.2.11"
ipython = "^8.24.0"
django-extensions = "^3.2.3"
django-debug-toolbar = "^4.4.2"
psycopg2-binary = "^2.9.9"
ruff = "^0.4.7"
python-dotenv = "^1.0.1"
gunicorn = "^22.0.0"
djangorestframework = "^3.15.2"
pytest = "^8.3.2"
pytest-testdox = "^3.1.0"
pytest-cov = "^5.0.0"
pytest-django = "^4.9.0"
celery = {extras = ["redis"], version = "^5.4.0"}

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
lint.select = ["E", "E3", "F", "B", "I", "W", "UP", "T20"]
lint.ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []
lint.preview = true

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "settings.py",
    "test_*.py",
    "conftest.py",
    ]

line-length = 100

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11
target-version = 'py311'


[tool.ruff.format]
# 5. Use single quotes for non-triple-quoted strings.
quote-style = "single"


[tool.pytest.ini_options]
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "sportinj.settings"
pythonpath = "sportinj"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py", "test*.py"]
addopts = """
           --cov=resources \
           --cov=account \
           --cov-report=html \
           --cov-fail-under=90 \
           --cov-report=term-missing \
           --cov-branch \
           --testdox -vv
          """


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
